/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: z3++.h

#define SWIGMODULE z3go

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include "z3++.h"


#include <string>

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_z3go_6ed2cbd4138c104c(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_z3go_6ed2cbd4138c104c(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_set_param__SWIG_0_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  z3::set_param((char const *)arg1,(char const *)arg2);
  
  free(arg1); 
  free(arg2); 
}


void _wrap_set_param__SWIG_1_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, bool _swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  
  z3::set_param((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_set_param__SWIG_2_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (int)_swig_go_1; 
  
  z3::set_param((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_reset_params_z3go_6ed2cbd4138c104c() {
  z3::reset_params();
  
}


z3::exception *_wrap_new_exception_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  z3::exception *result = 0 ;
  z3::exception *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (z3::exception *)new z3::exception((char const *)arg1);
  *(z3::exception **)&_swig_go_result = (z3::exception *)result; 
  free(arg1); 
  return _swig_go_result;
}


_gostring_ _wrap_exception_msg_z3go_6ed2cbd4138c104c(z3::exception *_swig_go_0) {
  z3::exception *arg1 = (z3::exception *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::exception **)&_swig_go_0; 
  
  result = (char *)((z3::exception const *)arg1)->msg();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_exception_z3go_6ed2cbd4138c104c(z3::exception *_swig_go_0) {
  z3::exception *arg1 = (z3::exception *) 0 ;
  
  arg1 = *(z3::exception **)&_swig_go_0; 
  
  delete arg1;
  
}


z3::config *_wrap_new_config_z3go_6ed2cbd4138c104c() {
  z3::config *result = 0 ;
  z3::config *_swig_go_result;
  
  
  result = (z3::config *)new z3::config();
  *(z3::config **)&_swig_go_result = (z3::config *)result; 
  return _swig_go_result;
}


void _wrap_delete_config_z3go_6ed2cbd4138c104c(z3::config *_swig_go_0) {
  z3::config *arg1 = (z3::config *) 0 ;
  
  arg1 = *(z3::config **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_config_set__SWIG_0_z3go_6ed2cbd4138c104c(z3::config *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  z3::config *arg1 = (z3::config *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(z3::config **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->set((char const *)arg2,(char const *)arg3);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_config_set__SWIG_1_z3go_6ed2cbd4138c104c(z3::config *_swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2) {
  z3::config *arg1 = (z3::config *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  
  arg1 = *(z3::config **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->set((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_config_set__SWIG_2_z3go_6ed2cbd4138c104c(z3::config *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  z3::config *arg1 = (z3::config *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(z3::config **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  (arg1)->set((char const *)arg2,arg3);
  
  free(arg2); 
}


intgo _wrap_unsat_z3go_6ed2cbd4138c104c() {
  z3::check_result result;
  intgo _swig_go_result;
  
  
  result = z3::unsat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_sat_z3go_6ed2cbd4138c104c() {
  z3::check_result result;
  intgo _swig_go_result;
  
  
  result = z3::sat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_unknown_z3go_6ed2cbd4138c104c() {
  z3::check_result result;
  intgo _swig_go_result;
  
  
  result = z3::unknown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_to_check_result_z3go_6ed2cbd4138c104c(Z3_lbool *_swig_go_0) {
  Z3_lbool arg1 ;
  Z3_lbool *argp1 ;
  z3::check_result result;
  intgo _swig_go_result;
  
  
  argp1 = (Z3_lbool *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_lbool");
  }
  arg1 = (Z3_lbool)*argp1;
  
  
  result = (z3::check_result)z3::to_check_result(arg1);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


z3::context *_wrap_new_context__SWIG_0_z3go_6ed2cbd4138c104c() {
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  
  result = (z3::context *)new z3::context();
  *(z3::context **)&_swig_go_result = (z3::context *)result; 
  return _swig_go_result;
}


z3::context *_wrap_new_context__SWIG_1_z3go_6ed2cbd4138c104c(z3::config *_swig_go_0) {
  z3::config *arg1 = 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::config **)&_swig_go_0; 
  
  result = (z3::context *)new z3::context(*arg1);
  *(z3::context **)&_swig_go_result = (z3::context *)result; 
  return _swig_go_result;
}


z3::context *_wrap_new_context__SWIG_2_z3go_6ed2cbd4138c104c(z3::config *_swig_go_0, z3::context::interpolation *_swig_go_1) {
  z3::config *arg1 = 0 ;
  z3::context::interpolation arg2 ;
  z3::context::interpolation *argp2 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::config **)&_swig_go_0; 
  
  argp2 = (z3::context::interpolation *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::context::interpolation");
  }
  arg2 = (z3::context::interpolation)*argp2;
  
  
  result = (z3::context *)new z3::context(*arg1,arg2);
  *(z3::context **)&_swig_go_result = (z3::context *)result; 
  return _swig_go_result;
}


void _wrap_delete_context_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = (z3::context *) 0 ;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_context_check_error_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = (z3::context *) 0 ;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  ((z3::context const *)arg1)->check_error();
  
}


void _wrap_context_set__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->set((char const *)arg2,(char const *)arg3);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_context_set__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->set((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_context_set__SWIG_2_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (int)_swig_go_2; 
  
  (arg1)->set((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_context_interrupt_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = (z3::context *) 0 ;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  (arg1)->interrupt();
  
}


z3::symbol *_wrap_context_str_symbol_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::symbol > result;
  z3::symbol *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->str_symbol((char const *)arg2);
  *(z3::symbol **)&_swig_go_result = new z3::symbol(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::symbol *_wrap_context_int_symbol_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  int arg2 ;
  SwigValueWrapper< z3::symbol > result;
  z3::symbol *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (arg1)->int_symbol(arg2);
  *(z3::symbol **)&_swig_go_result = new z3::symbol(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_bool_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = (z3::context *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (arg1)->bool_sort();
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_int_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = (z3::context *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (arg1)->int_sort();
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_real_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = (z3::context *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (arg1)->real_sort();
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_bv_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (arg1)->bv_sort(arg2);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_string_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = (z3::context *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (arg1)->string_sort();
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_seq_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::sort *_swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  z3::sort *arg2 = 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::sort **)&_swig_go_1; 
  
  result = (arg1)->seq_sort(*arg2);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_re_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::sort *_swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  z3::sort *arg2 = 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::sort **)&_swig_go_1; 
  
  result = (arg1)->re_sort(*arg2);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_array_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::sort *_swig_go_1, z3::sort *_swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  SwigValueWrapper< z3::sort > arg2 ;
  SwigValueWrapper< z3::sort > arg3 ;
  z3::sort *argp2 ;
  z3::sort *argp3 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (z3::sort *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::sort");
  }
  arg2 = (z3::sort)*argp2;
  
  
  argp3 = (z3::sort *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::sort");
  }
  arg3 = (z3::sort)*argp3;
  
  
  result = (arg1)->array_sort(arg2,arg3);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_context_enumeration_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_* _swig_go_3, z3::ast_vector_tpl< z3::func_decl > *_swig_go_4, z3::ast_vector_tpl< z3::func_decl > *_swig_go_5) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  char **arg4 = (char **) 0 ;
  z3::func_decl_vector *arg5 = 0 ;
  z3::func_decl_vector *arg6 = 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (unsigned int)_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(z3::func_decl_vector **)&_swig_go_4; 
  arg6 = *(z3::func_decl_vector **)&_swig_go_5; 
  
  result = (arg1)->enumeration_sort((char const *)arg2,arg3,(char const *const *)arg4,*arg5,*arg6);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::sort *_wrap_context_uninterpreted_sort__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->uninterpreted_sort((char const *)arg2);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::sort *_wrap_context_uninterpreted_sort__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::symbol *_swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  z3::symbol *arg2 = 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::symbol **)&_swig_go_1; 
  
  result = (arg1)->uninterpreted_sort((z3::symbol const &)*arg2);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::symbol *_swig_go_1, intgo _swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4) {
  z3::context *arg1 = (z3::context *) 0 ;
  z3::symbol *arg2 = 0 ;
  unsigned int arg3 ;
  z3::sort *arg4 = (z3::sort *) 0 ;
  z3::sort *arg5 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::symbol **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  
  result = (arg1)->function((z3::symbol const &)*arg2,arg3,(z3::sort const *)arg4,(z3::sort const &)*arg5);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  z3::sort *arg4 = (z3::sort *) 0 ;
  z3::sort *arg5 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (unsigned int)_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  
  result = (arg1)->function((char const *)arg2,arg3,(z3::sort const *)arg4,(z3::sort const &)*arg5);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_2_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::symbol *_swig_go_1, z3::ast_vector_tpl< z3::sort > *_swig_go_2, z3::sort *_swig_go_3) {
  z3::context *arg1 = (z3::context *) 0 ;
  z3::symbol *arg2 = 0 ;
  z3::sort_vector *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::symbol **)&_swig_go_1; 
  arg3 = *(z3::sort_vector **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  
  result = (arg1)->function((z3::symbol const &)*arg2,(z3::sort_vector const &)*arg3,(z3::sort const &)*arg4);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_3_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::ast_vector_tpl< z3::sort > *_swig_go_2, z3::sort *_swig_go_3) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort_vector *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort_vector **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  
  result = (arg1)->function((char const *)arg2,(z3::sort_vector const &)*arg3,(z3::sort const &)*arg4);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_4_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  
  result = (arg1)->function((char const *)arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_5_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  z3::sort *arg5 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  
  result = (arg1)->function((char const *)arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4,(z3::sort const &)*arg5);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_6_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4, z3::sort *_swig_go_5) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  z3::sort *arg5 = 0 ;
  z3::sort *arg6 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  arg6 = *(z3::sort **)&_swig_go_5; 
  
  result = (arg1)->function((char const *)arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4,(z3::sort const &)*arg5,(z3::sort const &)*arg6);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_7_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4, z3::sort *_swig_go_5, z3::sort *_swig_go_6) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  z3::sort *arg5 = 0 ;
  z3::sort *arg6 = 0 ;
  z3::sort *arg7 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  arg6 = *(z3::sort **)&_swig_go_5; 
  arg7 = *(z3::sort **)&_swig_go_6; 
  
  result = (arg1)->function((char const *)arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4,(z3::sort const &)*arg5,(z3::sort const &)*arg6,(z3::sort const &)*arg7);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::func_decl *_wrap_context_function__SWIG_8_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4, z3::sort *_swig_go_5, z3::sort *_swig_go_6, z3::sort *_swig_go_7) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  z3::sort *arg5 = 0 ;
  z3::sort *arg6 = 0 ;
  z3::sort *arg7 = 0 ;
  z3::sort *arg8 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  arg6 = *(z3::sort **)&_swig_go_5; 
  arg7 = *(z3::sort **)&_swig_go_6; 
  arg8 = *(z3::sort **)&_swig_go_7; 
  
  result = (arg1)->function((char const *)arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4,(z3::sort const &)*arg5,(z3::sort const &)*arg6,(z3::sort const &)*arg7,(z3::sort const &)*arg8);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_constant__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::symbol *_swig_go_1, z3::sort *_swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  z3::symbol *arg2 = 0 ;
  z3::sort *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::symbol **)&_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  
  result = (arg1)->constant((z3::symbol const &)*arg2,(z3::sort const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_constant__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::sort *_swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort **)&_swig_go_2; 
  
  result = (arg1)->constant((char const *)arg2,(z3::sort const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_bool_const_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->bool_const((char const *)arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_int_const_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->int_const((char const *)arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_real_const_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->real_const((char const *)arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_bv_const_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (arg1)->bv_const((char const *)arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_bool_val_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, bool _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  bool arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (arg1)->bool_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_int_val__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (arg1)->int_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_int_val__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (arg1)->int_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_int_val__SWIG_2_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, __int64 *_swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  __int64 arg2 ;
  __int64 *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (__int64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null __int64");
  }
  arg2 = (__int64)*argp2;
  
  
  result = (arg1)->int_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_int_val__SWIG_3_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, __uint64 *_swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  __uint64 arg2 ;
  __uint64 *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (__uint64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null __uint64");
  }
  arg2 = (__uint64)*argp2;
  
  
  result = (arg1)->int_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_int_val__SWIG_4_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->int_val((char const *)arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_real_val__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  int arg2 ;
  int arg3 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (arg1)->real_val(arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_real_val__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (arg1)->real_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_real_val__SWIG_2_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (arg1)->real_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_real_val__SWIG_3_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, __int64 *_swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  __int64 arg2 ;
  __int64 *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (__int64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null __int64");
  }
  arg2 = (__int64)*argp2;
  
  
  result = (arg1)->real_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_real_val__SWIG_4_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, __uint64 *_swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  __uint64 arg2 ;
  __uint64 *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (__uint64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null __uint64");
  }
  arg2 = (__uint64)*argp2;
  
  
  result = (arg1)->real_val(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_real_val__SWIG_5_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->real_val((char const *)arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_bv_val__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  int arg2 ;
  unsigned int arg3 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (arg1)->bv_val(arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_bv_val__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (arg1)->bv_val(arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_bv_val__SWIG_2_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, __int64 *_swig_go_1, intgo _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  __int64 arg2 ;
  unsigned int arg3 ;
  __int64 *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (__int64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null __int64");
  }
  arg2 = (__int64)*argp2;
  
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (arg1)->bv_val(arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_bv_val__SWIG_3_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, __uint64 *_swig_go_1, intgo _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  __uint64 arg2 ;
  unsigned int arg3 ;
  __uint64 *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (__uint64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null __uint64");
  }
  arg2 = (__uint64)*argp2;
  
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (arg1)->bv_val(arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_bv_val__SWIG_4_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (arg1)->bv_val((char const *)arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_string_val__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->string_val((char const *)arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_string_val__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  std::string *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (arg1)->string_val((std::string const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_num_val_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, intgo _swig_go_1, z3::sort *_swig_go_2) {
  z3::context *arg1 = (z3::context *) 0 ;
  int arg2 ;
  z3::sort *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  
  result = (arg1)->num_val(arg2,(z3::sort const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_context_parse_string__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->parse_string((char const *)arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_parse_file__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->parse_file((char const *)arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_parse_string__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::ast_vector_tpl< z3::sort > *_swig_go_2, z3::ast_vector_tpl< z3::func_decl > *_swig_go_3) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort_vector *arg3 = 0 ;
  z3::func_decl_vector *arg4 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort_vector **)&_swig_go_2; 
  arg4 = *(z3::func_decl_vector **)&_swig_go_3; 
  
  result = (arg1)->parse_string((char const *)arg2,(z3::sort_vector const &)*arg3,(z3::func_decl_vector const &)*arg4);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


z3::expr *_wrap_context_parse_file__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1, z3::ast_vector_tpl< z3::sort > *_swig_go_2, z3::ast_vector_tpl< z3::func_decl > *_swig_go_3) {
  z3::context *arg1 = (z3::context *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::sort_vector *arg3 = 0 ;
  z3::func_decl_vector *arg4 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::sort_vector **)&_swig_go_2; 
  arg4 = *(z3::func_decl_vector **)&_swig_go_3; 
  
  result = (arg1)->parse_file((char const *)arg2,(z3::sort_vector const &)*arg3,(z3::func_decl_vector const &)*arg4);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_context_compute_interpolant_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::expr *_swig_go_1, z3::params *_swig_go_2, z3::ast_vector_tpl< z3::expr > *_swig_go_3, z3::model *_swig_go_4) {
  z3::context *arg1 = (z3::context *) 0 ;
  z3::expr *arg2 = 0 ;
  z3::params *arg3 = 0 ;
  z3::expr_vector *arg4 = 0 ;
  z3::model *arg5 = 0 ;
  z3::check_result result;
  intgo _swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::params **)&_swig_go_2; 
  arg4 = *(z3::expr_vector **)&_swig_go_3; 
  arg5 = *(z3::model **)&_swig_go_4; 
  
  result = (z3::check_result)(arg1)->compute_interpolant((z3::expr const &)*arg2,(z3::params const &)*arg3,*arg4,*arg5);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


z3::ast_vector_tpl< z3::expr > *_wrap_context_get_interpolant_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2, z3::params *_swig_go_3) {
  z3::context *arg1 = (z3::context *) 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  z3::params *arg4 = 0 ;
  SwigValueWrapper< z3::ast_vector_tpl< z3::expr > > result;
  z3::ast_vector_tpl< z3::expr > *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  arg4 = *(z3::params **)&_swig_go_3; 
  
  result = (arg1)->get_interpolant((z3::expr const &)*arg2,(z3::expr const &)*arg3,(z3::params const &)*arg4);
  *(z3::expr_vector **)&_swig_go_result = new z3::expr_vector(result); 
  return _swig_go_result;
}


z3::object *_wrap_new_object__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::object *result = 0 ;
  z3::object *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::object *)new z3::object(*arg1);
  *(z3::object **)&_swig_go_result = (z3::object *)result; 
  return _swig_go_result;
}


z3::object *_wrap_new_object__SWIG_1_z3go_6ed2cbd4138c104c(z3::object *_swig_go_0) {
  z3::object *arg1 = 0 ;
  z3::object *result = 0 ;
  z3::object *_swig_go_result;
  
  arg1 = *(z3::object **)&_swig_go_0; 
  
  result = (z3::object *)new z3::object((z3::object const &)*arg1);
  *(z3::object **)&_swig_go_result = (z3::object *)result; 
  return _swig_go_result;
}


z3::context *_wrap_object_ctx_z3go_6ed2cbd4138c104c(z3::object *_swig_go_0) {
  z3::object *arg1 = (z3::object *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::object **)&_swig_go_0; 
  
  result = (z3::context *) &((z3::object const *)arg1)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_object_check_error_z3go_6ed2cbd4138c104c(z3::object *_swig_go_0) {
  z3::object *arg1 = (z3::object *) 0 ;
  
  arg1 = *(z3::object **)&_swig_go_0; 
  
  ((z3::object const *)arg1)->check_error();
  
}


void _wrap_delete_object_z3go_6ed2cbd4138c104c(z3::object *_swig_go_0) {
  z3::object *arg1 = (z3::object *) 0 ;
  
  arg1 = *(z3::object **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_check_context_z3go_6ed2cbd4138c104c(z3::object *_swig_go_0, z3::object *_swig_go_1) {
  z3::object *arg1 = 0 ;
  z3::object *arg2 = 0 ;
  
  arg1 = *(z3::object **)&_swig_go_0; 
  arg2 = *(z3::object **)&_swig_go_1; 
  
  z3::check_context((z3::object const &)*arg1,(z3::object const &)*arg2);
  
}


z3::symbol *_wrap_new_symbol__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_symbol *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_symbol arg2 ;
  Z3_symbol *argp2 ;
  z3::symbol *result = 0 ;
  z3::symbol *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_symbol *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_symbol");
  }
  arg2 = (Z3_symbol)*argp2;
  
  
  result = (z3::symbol *)new z3::symbol(*arg1,arg2);
  *(z3::symbol **)&_swig_go_result = (z3::symbol *)result; 
  return _swig_go_result;
}


z3::symbol *_wrap_new_symbol__SWIG_1_z3go_6ed2cbd4138c104c(z3::symbol *_swig_go_0) {
  z3::symbol *arg1 = 0 ;
  z3::symbol *result = 0 ;
  z3::symbol *_swig_go_result;
  
  arg1 = *(z3::symbol **)&_swig_go_0; 
  
  result = (z3::symbol *)new z3::symbol((z3::symbol const &)*arg1);
  *(z3::symbol **)&_swig_go_result = (z3::symbol *)result; 
  return _swig_go_result;
}


Z3_symbol_kind *_wrap_symbol_kind_z3go_6ed2cbd4138c104c(z3::symbol *_swig_go_0) {
  z3::symbol *arg1 = (z3::symbol *) 0 ;
  Z3_symbol_kind result;
  Z3_symbol_kind *_swig_go_result;
  
  arg1 = *(z3::symbol **)&_swig_go_0; 
  
  result = ((z3::symbol const *)arg1)->kind();
  *(Z3_symbol_kind **)&_swig_go_result = new Z3_symbol_kind(result); 
  return _swig_go_result;
}


_gostring_ _wrap_symbol_str_z3go_6ed2cbd4138c104c(z3::symbol *_swig_go_0) {
  z3::symbol *arg1 = (z3::symbol *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::symbol **)&_swig_go_0; 
  
  result = ((z3::symbol const *)arg1)->str();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


intgo _wrap_symbol_to_int_z3go_6ed2cbd4138c104c(z3::symbol *_swig_go_0) {
  z3::symbol *arg1 = (z3::symbol *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::symbol **)&_swig_go_0; 
  
  result = (int)((z3::symbol const *)arg1)->to_int();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_symbol_z3go_6ed2cbd4138c104c(z3::symbol *_swig_go_0) {
  z3::symbol *arg1 = (z3::symbol *) 0 ;
  
  arg1 = *(z3::symbol **)&_swig_go_0; 
  
  delete arg1;
  
}


z3::context *_wrap_symbol_ctx_z3go_6ed2cbd4138c104c(z3::symbol *_swig_go_0) {
  z3::symbol *arg1 = (z3::symbol *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::symbol **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_symbol_check_error_z3go_6ed2cbd4138c104c(z3::symbol *_swig_go_0) {
  z3::symbol *arg1 = (z3::symbol *) 0 ;
  
  arg1 = *(z3::symbol **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::param_descrs *_wrap_new_param_descrs__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_param_descrs *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_param_descrs arg2 ;
  Z3_param_descrs *argp2 ;
  z3::param_descrs *result = 0 ;
  z3::param_descrs *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_param_descrs *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_param_descrs");
  }
  arg2 = (Z3_param_descrs)*argp2;
  
  
  result = (z3::param_descrs *)new z3::param_descrs(*arg1,arg2);
  *(z3::param_descrs **)&_swig_go_result = (z3::param_descrs *)result; 
  return _swig_go_result;
}


z3::param_descrs *_wrap_new_param_descrs__SWIG_1_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0) {
  z3::param_descrs *arg1 = 0 ;
  z3::param_descrs *result = 0 ;
  z3::param_descrs *_swig_go_result;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  
  result = (z3::param_descrs *)new z3::param_descrs((z3::param_descrs const &)*arg1);
  *(z3::param_descrs **)&_swig_go_result = (z3::param_descrs *)result; 
  return _swig_go_result;
}


void _wrap_delete_param_descrs_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0) {
  z3::param_descrs *arg1 = (z3::param_descrs *) 0 ;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  
  delete arg1;
  
}


z3::param_descrs *_wrap_param_descrs_simplify_param_descrs_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  SwigValueWrapper< z3::param_descrs > result;
  z3::param_descrs *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = z3::param_descrs::simplify_param_descrs(*arg1);
  *(z3::param_descrs **)&_swig_go_result = new z3::param_descrs(result); 
  return _swig_go_result;
}


intgo _wrap_param_descrs_size_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0) {
  z3::param_descrs *arg1 = (z3::param_descrs *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  
  result = (unsigned int)(arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::symbol *_wrap_param_descrs_name_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0, intgo _swig_go_1) {
  z3::param_descrs *arg1 = (z3::param_descrs *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::symbol > result;
  z3::symbol *_swig_go_result;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (arg1)->name(arg2);
  *(z3::symbol **)&_swig_go_result = new z3::symbol(result); 
  return _swig_go_result;
}


Z3_param_kind *_wrap_param_descrs_kind_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0, z3::symbol *_swig_go_1) {
  z3::param_descrs *arg1 = (z3::param_descrs *) 0 ;
  z3::symbol *arg2 = 0 ;
  Z3_param_kind result;
  Z3_param_kind *_swig_go_result;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  arg2 = *(z3::symbol **)&_swig_go_1; 
  
  result = (arg1)->kind((z3::symbol const &)*arg2);
  *(Z3_param_kind **)&_swig_go_result = new Z3_param_kind(result); 
  return _swig_go_result;
}


_gostring_ _wrap_param_descrs_documentation_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0, z3::symbol *_swig_go_1) {
  z3::param_descrs *arg1 = (z3::param_descrs *) 0 ;
  z3::symbol *arg2 = 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  arg2 = *(z3::symbol **)&_swig_go_1; 
  
  result = (arg1)->documentation((z3::symbol const &)*arg2);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


_gostring_ _wrap_param_descrs_to_string_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0) {
  z3::param_descrs *arg1 = (z3::param_descrs *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  
  result = ((z3::param_descrs const *)arg1)->to_string();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::context *_wrap_param_descrs_ctx_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0) {
  z3::param_descrs *arg1 = (z3::param_descrs *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_param_descrs_check_error_z3go_6ed2cbd4138c104c(z3::param_descrs *_swig_go_0) {
  z3::param_descrs *arg1 = (z3::param_descrs *) 0 ;
  
  arg1 = *(z3::param_descrs **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::params *_wrap_new_params__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::params *result = 0 ;
  z3::params *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::params *)new z3::params(*arg1);
  *(z3::params **)&_swig_go_result = (z3::params *)result; 
  return _swig_go_result;
}


z3::params *_wrap_new_params__SWIG_1_z3go_6ed2cbd4138c104c(z3::params *_swig_go_0) {
  z3::params *arg1 = 0 ;
  z3::params *result = 0 ;
  z3::params *_swig_go_result;
  
  arg1 = *(z3::params **)&_swig_go_0; 
  
  result = (z3::params *)new z3::params((z3::params const &)*arg1);
  *(z3::params **)&_swig_go_result = (z3::params *)result; 
  return _swig_go_result;
}


void _wrap_delete_params_z3go_6ed2cbd4138c104c(z3::params *_swig_go_0) {
  z3::params *arg1 = (z3::params *) 0 ;
  
  arg1 = *(z3::params **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_params_set__SWIG_0_z3go_6ed2cbd4138c104c(z3::params *_swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2) {
  z3::params *arg1 = (z3::params *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  
  arg1 = *(z3::params **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->set((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_params_set__SWIG_1_z3go_6ed2cbd4138c104c(z3::params *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  z3::params *arg1 = (z3::params *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  
  arg1 = *(z3::params **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (unsigned int)_swig_go_2; 
  
  (arg1)->set((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_params_set__SWIG_2_z3go_6ed2cbd4138c104c(z3::params *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2) {
  z3::params *arg1 = (z3::params *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  
  arg1 = *(z3::params **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (double)_swig_go_2; 
  
  (arg1)->set((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_params_set__SWIG_3_z3go_6ed2cbd4138c104c(z3::params *_swig_go_0, _gostring_ _swig_go_1, z3::symbol *_swig_go_2) {
  z3::params *arg1 = (z3::params *) 0 ;
  char *arg2 = (char *) 0 ;
  z3::symbol *arg3 = 0 ;
  
  arg1 = *(z3::params **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(z3::symbol **)&_swig_go_2; 
  
  (arg1)->set((char const *)arg2,(z3::symbol const &)*arg3);
  
  free(arg2); 
}


z3::context *_wrap_params_ctx_z3go_6ed2cbd4138c104c(z3::params *_swig_go_0) {
  z3::params *arg1 = (z3::params *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::params **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_params_check_error_z3go_6ed2cbd4138c104c(z3::params *_swig_go_0) {
  z3::params *arg1 = (z3::params *) 0 ;
  
  arg1 = *(z3::params **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::ast *_wrap_new_ast__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::ast *result = 0 ;
  z3::ast *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::ast *)new z3::ast(*arg1);
  *(z3::ast **)&_swig_go_result = (z3::ast *)result; 
  return _swig_go_result;
}


z3::ast *_wrap_new_ast__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_ast *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_ast arg2 ;
  Z3_ast *argp2 ;
  z3::ast *result = 0 ;
  z3::ast *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_ast *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_ast");
  }
  arg2 = (Z3_ast)*argp2;
  
  
  result = (z3::ast *)new z3::ast(*arg1,arg2);
  *(z3::ast **)&_swig_go_result = (z3::ast *)result; 
  return _swig_go_result;
}


z3::ast *_wrap_new_ast__SWIG_2_z3go_6ed2cbd4138c104c(z3::ast *_swig_go_0) {
  z3::ast *arg1 = 0 ;
  z3::ast *result = 0 ;
  z3::ast *_swig_go_result;
  
  arg1 = *(z3::ast **)&_swig_go_0; 
  
  result = (z3::ast *)new z3::ast((z3::ast const &)*arg1);
  *(z3::ast **)&_swig_go_result = (z3::ast *)result; 
  return _swig_go_result;
}


void _wrap_delete_ast_z3go_6ed2cbd4138c104c(z3::ast *_swig_go_0) {
  z3::ast *arg1 = (z3::ast *) 0 ;
  
  arg1 = *(z3::ast **)&_swig_go_0; 
  
  delete arg1;
  
}


Z3_ast_kind *_wrap_ast_kind_z3go_6ed2cbd4138c104c(z3::ast *_swig_go_0) {
  z3::ast *arg1 = (z3::ast *) 0 ;
  Z3_ast_kind result;
  Z3_ast_kind *_swig_go_result;
  
  arg1 = *(z3::ast **)&_swig_go_0; 
  
  result = ((z3::ast const *)arg1)->kind();
  *(Z3_ast_kind **)&_swig_go_result = new Z3_ast_kind(result); 
  return _swig_go_result;
}


intgo _wrap_ast_hash_z3go_6ed2cbd4138c104c(z3::ast *_swig_go_0) {
  z3::ast *arg1 = (z3::ast *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::ast **)&_swig_go_0; 
  
  result = (unsigned int)((z3::ast const *)arg1)->hash();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ast_to_string_z3go_6ed2cbd4138c104c(z3::ast *_swig_go_0) {
  z3::ast *arg1 = (z3::ast *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::ast **)&_swig_go_0; 
  
  result = ((z3::ast const *)arg1)->to_string();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::context *_wrap_ast_ctx_z3go_6ed2cbd4138c104c(z3::ast *_swig_go_0) {
  z3::ast *arg1 = (z3::ast *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::ast **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ast_check_error_z3go_6ed2cbd4138c104c(z3::ast *_swig_go_0) {
  z3::ast *arg1 = (z3::ast *) 0 ;
  
  arg1 = *(z3::ast **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


bool _wrap_eq_z3go_6ed2cbd4138c104c(z3::ast *_swig_go_0, z3::ast *_swig_go_1) {
  z3::ast *arg1 = 0 ;
  z3::ast *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::ast **)&_swig_go_0; 
  arg2 = *(z3::ast **)&_swig_go_1; 
  
  result = (bool)z3::eq((z3::ast const &)*arg1,(z3::ast const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::sort *_wrap_new_sort__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::sort *result = 0 ;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::sort *)new z3::sort(*arg1);
  *(z3::sort **)&_swig_go_result = (z3::sort *)result; 
  return _swig_go_result;
}


z3::sort *_wrap_new_sort__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_sort *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_sort arg2 ;
  Z3_sort *argp2 ;
  z3::sort *result = 0 ;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_sort *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_sort");
  }
  arg2 = (Z3_sort)*argp2;
  
  
  result = (z3::sort *)new z3::sort(*arg1,arg2);
  *(z3::sort **)&_swig_go_result = (z3::sort *)result; 
  return _swig_go_result;
}


z3::sort *_wrap_new_sort__SWIG_2_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = 0 ;
  z3::sort *result = 0 ;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (z3::sort *)new z3::sort((z3::sort const &)*arg1);
  *(z3::sort **)&_swig_go_result = (z3::sort *)result; 
  return _swig_go_result;
}


Z3_sort_kind *_wrap_sort_sort_kind_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  Z3_sort_kind result;
  Z3_sort_kind *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = ((z3::sort const *)arg1)->sort_kind();
  *(Z3_sort_kind **)&_swig_go_result = new Z3_sort_kind(result); 
  return _swig_go_result;
}


z3::symbol *_wrap_sort_name_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  SwigValueWrapper< z3::symbol > result;
  z3::symbol *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = ((z3::sort const *)arg1)->name();
  *(z3::symbol **)&_swig_go_result = new z3::symbol(result); 
  return _swig_go_result;
}


bool _wrap_sort_is_bool_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_bool();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_int_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_int();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_real_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_real();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_arith_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_arith();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_bv_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_bv();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_array_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_array();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_datatype_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_datatype();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_relation_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_relation();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_seq_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_seq();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_re_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_re();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sort_is_finite_domain_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (bool)((z3::sort const *)arg1)->is_finite_domain();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_sort_bv_size_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = (unsigned int)((z3::sort const *)arg1)->bv_size();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::sort *_wrap_sort_array_domain_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = ((z3::sort const *)arg1)->array_domain();
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_sort_array_range_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = ((z3::sort const *)arg1)->array_range();
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


void _wrap_delete_sort_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  delete arg1;
  
}


Z3_ast_kind *_wrap_sort_kind_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  Z3_ast_kind result;
  Z3_ast_kind *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = ((z3::ast const *)swig_b0)->kind();
  *(Z3_ast_kind **)&_swig_go_result = new Z3_ast_kind(result); 
  return _swig_go_result;
}


intgo _wrap_sort_hash_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = (unsigned int)((z3::ast const *)swig_b0)->hash();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_sort_to_string_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = ((z3::ast const *)swig_b0)->to_string();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::context *_wrap_sort_ctx_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  z3::object *swig_b1 = (z3::object *)swig_b0;
  result = (z3::context *) &((z3::object const *)swig_b1)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sort_check_error_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = (z3::sort *) 0 ;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  z3::object *swig_b1 = (z3::object *)swig_b0;
  ((z3::object const *)swig_b1)->check_error();
  
}


z3::func_decl *_wrap_new_func_decl__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::func_decl *result = 0 ;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::func_decl *)new z3::func_decl(*arg1);
  *(z3::func_decl **)&_swig_go_result = (z3::func_decl *)result; 
  return _swig_go_result;
}


z3::func_decl *_wrap_new_func_decl__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_func_decl *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_func_decl arg2 ;
  Z3_func_decl *argp2 ;
  z3::func_decl *result = 0 ;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_func_decl *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_func_decl");
  }
  arg2 = (Z3_func_decl)*argp2;
  
  
  result = (z3::func_decl *)new z3::func_decl(*arg1,arg2);
  *(z3::func_decl **)&_swig_go_result = (z3::func_decl *)result; 
  return _swig_go_result;
}


z3::func_decl *_wrap_new_func_decl__SWIG_2_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = 0 ;
  z3::func_decl *result = 0 ;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  result = (z3::func_decl *)new z3::func_decl((z3::func_decl const &)*arg1);
  *(z3::func_decl **)&_swig_go_result = (z3::func_decl *)result; 
  return _swig_go_result;
}


intgo _wrap_func_decl_arity_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  result = (unsigned int)((z3::func_decl const *)arg1)->arity();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::sort *_wrap_func_decl_domain_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0, intgo _swig_go_1) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((z3::func_decl const *)arg1)->domain(arg2);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::sort *_wrap_func_decl_Xrange_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  result = ((z3::func_decl const *)arg1)->range();
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::symbol *_wrap_func_decl_name_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  SwigValueWrapper< z3::symbol > result;
  z3::symbol *_swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  result = ((z3::func_decl const *)arg1)->name();
  *(z3::symbol **)&_swig_go_result = new z3::symbol(result); 
  return _swig_go_result;
}


Z3_decl_kind *_wrap_func_decl_decl_kind_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  Z3_decl_kind result;
  Z3_decl_kind *_swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  result = ((z3::func_decl const *)arg1)->decl_kind();
  *(Z3_decl_kind **)&_swig_go_result = new Z3_decl_kind(result); 
  return _swig_go_result;
}


bool _wrap_func_decl_is_const_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  result = (bool)((z3::func_decl const *)arg1)->is_const();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_func_decl_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  delete arg1;
  
}


Z3_ast_kind *_wrap_func_decl_kind_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  Z3_ast_kind result;
  Z3_ast_kind *_swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = ((z3::ast const *)swig_b0)->kind();
  *(Z3_ast_kind **)&_swig_go_result = new Z3_ast_kind(result); 
  return _swig_go_result;
}


intgo _wrap_func_decl_hash_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = (unsigned int)((z3::ast const *)swig_b0)->hash();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_func_decl_to_string_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = ((z3::ast const *)swig_b0)->to_string();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::context *_wrap_func_decl_ctx_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  z3::object *swig_b1 = (z3::object *)swig_b0;
  result = (z3::context *) &((z3::object const *)swig_b1)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_func_decl_check_error_z3go_6ed2cbd4138c104c(z3::func_decl *_swig_go_0) {
  z3::func_decl *arg1 = (z3::func_decl *) 0 ;
  
  arg1 = *(z3::func_decl **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  z3::object *swig_b1 = (z3::object *)swig_b0;
  ((z3::object const *)swig_b1)->check_error();
  
}


z3::expr *_wrap_new_expr__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::expr *result = 0 ;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::expr *)new z3::expr(*arg1);
  *(z3::expr **)&_swig_go_result = (z3::expr *)result; 
  return _swig_go_result;
}


z3::expr *_wrap_new_expr__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_ast *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_ast arg2 ;
  Z3_ast *argp2 ;
  z3::expr *result = 0 ;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_ast *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_ast");
  }
  arg2 = (Z3_ast)*argp2;
  
  
  result = (z3::expr *)new z3::expr(*arg1,arg2);
  *(z3::expr **)&_swig_go_result = (z3::expr *)result; 
  return _swig_go_result;
}


z3::expr *_wrap_new_expr__SWIG_2_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  z3::expr *result = 0 ;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (z3::expr *)new z3::expr((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = (z3::expr *)result; 
  return _swig_go_result;
}


z3::sort *_wrap_expr_get_sort_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = ((z3::expr const *)arg1)->get_sort();
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


bool _wrap_expr_is_bool_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_bool();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_int_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_int();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_real_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_real();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_arith_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_arith();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_bv_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_bv();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_array_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_array();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_datatype_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_datatype();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_relation_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_relation();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_seq_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_seq();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_re_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_re();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_finite_domain_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_finite_domain();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_numeral__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_numeral();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_numeral_i64_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, __int64 *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  __int64 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(__int64 **)&_swig_go_1; 
  
  result = (bool)((z3::expr const *)arg1)->is_numeral_i64(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_numeral_u64_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, __uint64 *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  __uint64 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(__uint64 **)&_swig_go_1; 
  
  result = (bool)((z3::expr const *)arg1)->is_numeral_u64(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_numeral_i_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, int *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  int *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)((z3::expr const *)arg1)->is_numeral_i(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_numeral_u_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, unsigned int *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  unsigned int *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  result = (bool)((z3::expr const *)arg1)->is_numeral_u(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_numeral__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, std::string *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  
  result = (bool)((z3::expr const *)arg1)->is_numeral(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_numeral__SWIG_2_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, std::string *_swig_go_1, intgo _swig_go_2) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (bool)((z3::expr const *)arg1)->is_numeral(*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_app_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_app();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_const_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_const();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_quantifier_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_quantifier();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_var_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_var();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_algebraic_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_algebraic();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_expr_is_well_sorted_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (bool)((z3::expr const *)arg1)->is_well_sorted();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_expr_get_decimal_string_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  int arg2 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((z3::expr const *)arg1)->get_decimal_string(arg2);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


intgo _wrap_expr_get_numeral_int_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (int)((z3::expr const *)arg1)->get_numeral_int();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_expr_get_numeral_uint_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (unsigned int)((z3::expr const *)arg1)->get_numeral_uint();
  _swig_go_result = result; 
  return _swig_go_result;
}


__int64 *_wrap_expr_get_numeral_int64_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  __int64 result;
  __int64 *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = ((z3::expr const *)arg1)->get_numeral_int64();
  *(__int64 **)&_swig_go_result = new __int64(result); 
  return _swig_go_result;
}


__uint64 *_wrap_expr_get_numeral_uint64_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  __uint64 result;
  __uint64 *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = ((z3::expr const *)arg1)->get_numeral_uint64();
  *(__uint64 **)&_swig_go_result = new __uint64(result); 
  return _swig_go_result;
}


z3::func_decl *_wrap_expr_decl_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = ((z3::expr const *)arg1)->decl();
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  return _swig_go_result;
}


intgo _wrap_expr_num_args_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (unsigned int)((z3::expr const *)arg1)->num_args();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::expr *_wrap_expr_arg_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((z3::expr const *)arg1)->arg(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_body_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = ((z3::expr const *)arg1)->body();
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Not__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = operator !((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_And__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator &&((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_And__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, bool _swig_go_1) {
  z3::expr *arg1 = 0 ;
  bool arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = operator &&((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_And__SWIG_2_z3go_6ed2cbd4138c104c(bool _swig_go_0, z3::expr *_swig_go_1) {
  bool arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (bool)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator &&(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Or__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator ||((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Or__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, bool _swig_go_1) {
  z3::expr *arg1 = 0 ;
  bool arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = operator ||((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Or__SWIG_2_z3go_6ed2cbd4138c104c(bool _swig_go_0, z3::expr *_swig_go_1) {
  bool arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (bool)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator ||(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Equals__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator ==((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Equals__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator ==((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Equals__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator ==(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_NotEquals__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator !=((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_NotEquals__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator !=((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_NotEquals__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator !=(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Add__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator +((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Add__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator +((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Add__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator +(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Mult__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator *((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Mult__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator *((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Mult__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator *(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Div__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator /((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Div__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator /((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Div__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator /(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Substract__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = operator -((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Substract__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator -((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Substract__SWIG_2_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator -((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Substract__SWIG_3_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator -(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_LessEq__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator <=((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_LessEq__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator <=((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_LessEq__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator <=(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_GreaterEq__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator >=((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_GreaterEq__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator >=((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_GreaterEq__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator >=(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Less__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator <((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Less__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator <((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Less__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator <(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Greater__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator >((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Greater__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = operator >((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Greater__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = operator >(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_extract__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = ((z3::expr const *)arg1)->extract(arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


intgo _wrap_expr_lo_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (unsigned int)((z3::expr const *)arg1)->lo();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_expr_hi_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = (unsigned int)((z3::expr const *)arg1)->hi();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::expr *_wrap_expr_extract__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = ((z3::expr const *)arg1)->extract((z3::expr const &)*arg2,(z3::expr const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_replace_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = ((z3::expr const *)arg1)->replace((z3::expr const &)*arg2,(z3::expr const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_unit_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = ((z3::expr const *)arg1)->unit();
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_contains_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = (arg1)->contains((z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_at_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = ((z3::expr const *)arg1)->at((z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_length_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = ((z3::expr const *)arg1)->length();
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_simplify__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = ((z3::expr const *)arg1)->simplify();
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_simplify__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::params *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  z3::params *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::params **)&_swig_go_1; 
  
  result = ((z3::expr const *)arg1)->simplify((z3::params const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_substitute__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::ast_vector_tpl< z3::expr > *_swig_go_1, z3::ast_vector_tpl< z3::expr > *_swig_go_2) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  z3::expr_vector *arg2 = 0 ;
  z3::expr_vector *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr_vector **)&_swig_go_1; 
  arg3 = *(z3::expr_vector **)&_swig_go_2; 
  
  result = (arg1)->substitute((z3::expr_vector const &)*arg2,(z3::expr_vector const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_expr_substitute__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::ast_vector_tpl< z3::expr > *_swig_go_1) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  z3::expr_vector *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr_vector **)&_swig_go_1; 
  
  result = (arg1)->substitute((z3::expr_vector const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


void _wrap_delete_expr_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  delete arg1;
  
}


Z3_ast_kind *_wrap_expr_kind_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  Z3_ast_kind result;
  Z3_ast_kind *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = ((z3::ast const *)swig_b0)->kind();
  *(Z3_ast_kind **)&_swig_go_result = new Z3_ast_kind(result); 
  return _swig_go_result;
}


intgo _wrap_expr_hash_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = (unsigned int)((z3::ast const *)swig_b0)->hash();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_expr_to_string_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  result = ((z3::ast const *)swig_b0)->to_string();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::context *_wrap_expr_ctx_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  z3::object *swig_b1 = (z3::object *)swig_b0;
  result = (z3::context *) &((z3::object const *)swig_b1)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_expr_check_error_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = (z3::expr *) 0 ;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  z3::ast *swig_b0 = (z3::ast *)arg1;
  z3::object *swig_b1 = (z3::object *)swig_b0;
  ((z3::object const *)swig_b1)->check_error();
  
}


z3::expr *_wrap_implies__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::implies((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_implies__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, bool _swig_go_1) {
  z3::expr *arg1 = 0 ;
  bool arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = z3::implies((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_implies__SWIG_2_z3go_6ed2cbd4138c104c(bool _swig_go_0, z3::expr *_swig_go_1) {
  bool arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (bool)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::implies(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_pw__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::pw((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_pw__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::pw((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_pw__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::pw(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ite_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = z3::ite((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_to_expr_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_ast *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_ast arg2 ;
  Z3_ast *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_ast *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_ast");
  }
  arg2 = (Z3_ast)*argp2;
  
  
  result = z3::to_expr(*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::sort *_wrap_to_sort_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_sort *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_sort arg2 ;
  Z3_sort *argp2 ;
  SwigValueWrapper< z3::sort > result;
  z3::sort *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_sort *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_sort");
  }
  arg2 = (Z3_sort)*argp2;
  
  
  result = z3::to_sort(*arg1,arg2);
  *(z3::sort **)&_swig_go_result = new z3::sort(result); 
  return _swig_go_result;
}


z3::func_decl *_wrap_to_func_decl_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_func_decl *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_func_decl arg2 ;
  Z3_func_decl *argp2 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_func_decl *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_func_decl");
  }
  arg2 = (Z3_func_decl)*argp2;
  
  
  result = z3::to_func_decl(*arg1,arg2);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ule__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::ule((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ule__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::ule((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ule__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::ule(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ult__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::ult((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ult__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::ult((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ult__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::ult(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_uge__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::uge((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_uge__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::uge((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_uge__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::uge(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ugt__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::ugt((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ugt__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::ugt((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ugt__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::ugt(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_udiv__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::udiv((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_udiv__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::udiv((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_udiv__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::udiv(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_srem__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::srem((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_srem__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::srem((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_srem__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::srem(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_urem__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::urem((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_urem__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::urem((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_urem__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::urem(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_shl__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::shl((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_shl__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::shl((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_shl__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::shl(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_lshr__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::lshr((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_lshr__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::lshr((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_lshr__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::lshr(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ashr__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::ashr((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ashr__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::ashr((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_ashr__SWIG_2_z3go_6ed2cbd4138c104c(intgo _swig_go_0, z3::expr *_swig_go_1) {
  int arg1 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::ashr(arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_zext_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = z3::zext((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_sext_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = z3::sext((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_forall__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::forall((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_forall__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = z3::forall((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_forall__SWIG_2_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2, z3::expr *_swig_go_3) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  z3::expr *arg4 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  arg4 = *(z3::expr **)&_swig_go_3; 
  
  result = z3::forall((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3,(z3::expr const &)*arg4);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_forall__SWIG_3_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2, z3::expr *_swig_go_3, z3::expr *_swig_go_4) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  z3::expr *arg4 = 0 ;
  z3::expr *arg5 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  arg4 = *(z3::expr **)&_swig_go_3; 
  arg5 = *(z3::expr **)&_swig_go_4; 
  
  result = z3::forall((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3,(z3::expr const &)*arg4,(z3::expr const &)*arg5);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_forall__SWIG_4_z3go_6ed2cbd4138c104c(z3::ast_vector_tpl< z3::expr > *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr_vector *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr_vector **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::forall((z3::ast_vector_tpl< z3::expr > const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_exists__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::exists((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_exists__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = z3::exists((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_exists__SWIG_2_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2, z3::expr *_swig_go_3) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  z3::expr *arg4 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  arg4 = *(z3::expr **)&_swig_go_3; 
  
  result = z3::exists((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3,(z3::expr const &)*arg4);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_exists__SWIG_3_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2, z3::expr *_swig_go_3, z3::expr *_swig_go_4) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  z3::expr *arg4 = 0 ;
  z3::expr *arg5 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  arg4 = *(z3::expr **)&_swig_go_3; 
  arg5 = *(z3::expr **)&_swig_go_4; 
  
  result = z3::exists((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3,(z3::expr const &)*arg4,(z3::expr const &)*arg5);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_exists__SWIG_4_z3go_6ed2cbd4138c104c(z3::ast_vector_tpl< z3::expr > *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr_vector *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr_vector **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::exists((z3::ast_vector_tpl< z3::expr > const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_distinct_z3go_6ed2cbd4138c104c(z3::ast_vector_tpl< z3::expr > *_swig_go_0) {
  z3::expr_vector *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr_vector **)&_swig_go_0; 
  
  result = z3::distinct((z3::ast_vector_tpl< z3::expr > const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_concat__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::concat((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_concat__SWIG_1_z3go_6ed2cbd4138c104c(z3::ast_vector_tpl< z3::expr > *_swig_go_0) {
  z3::expr_vector *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr_vector **)&_swig_go_0; 
  
  result = z3::concat((z3::ast_vector_tpl< z3::expr > const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_mk_or_z3go_6ed2cbd4138c104c(z3::ast_vector_tpl< z3::expr > *_swig_go_0) {
  z3::expr_vector *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr_vector **)&_swig_go_0; 
  
  result = z3::mk_or((z3::ast_vector_tpl< z3::expr > const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_mk_and_z3go_6ed2cbd4138c104c(z3::ast_vector_tpl< z3::expr > *_swig_go_0) {
  z3::expr_vector *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr_vector **)&_swig_go_0; 
  
  result = z3::mk_and((z3::ast_vector_tpl< z3::expr > const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::func_entry *_wrap_new_func_entry__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_func_entry *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_func_entry arg2 ;
  Z3_func_entry *argp2 ;
  z3::func_entry *result = 0 ;
  z3::func_entry *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_func_entry *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_func_entry");
  }
  arg2 = (Z3_func_entry)*argp2;
  
  
  result = (z3::func_entry *)new z3::func_entry(*arg1,arg2);
  *(z3::func_entry **)&_swig_go_result = (z3::func_entry *)result; 
  return _swig_go_result;
}


z3::func_entry *_wrap_new_func_entry__SWIG_1_z3go_6ed2cbd4138c104c(z3::func_entry *_swig_go_0) {
  z3::func_entry *arg1 = 0 ;
  z3::func_entry *result = 0 ;
  z3::func_entry *_swig_go_result;
  
  arg1 = *(z3::func_entry **)&_swig_go_0; 
  
  result = (z3::func_entry *)new z3::func_entry((z3::func_entry const &)*arg1);
  *(z3::func_entry **)&_swig_go_result = (z3::func_entry *)result; 
  return _swig_go_result;
}


void _wrap_delete_func_entry_z3go_6ed2cbd4138c104c(z3::func_entry *_swig_go_0) {
  z3::func_entry *arg1 = (z3::func_entry *) 0 ;
  
  arg1 = *(z3::func_entry **)&_swig_go_0; 
  
  delete arg1;
  
}


z3::expr *_wrap_func_entry_value_z3go_6ed2cbd4138c104c(z3::func_entry *_swig_go_0) {
  z3::func_entry *arg1 = (z3::func_entry *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::func_entry **)&_swig_go_0; 
  
  result = ((z3::func_entry const *)arg1)->value();
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


intgo _wrap_func_entry_num_args_z3go_6ed2cbd4138c104c(z3::func_entry *_swig_go_0) {
  z3::func_entry *arg1 = (z3::func_entry *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::func_entry **)&_swig_go_0; 
  
  result = (unsigned int)((z3::func_entry const *)arg1)->num_args();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::expr *_wrap_func_entry_arg_z3go_6ed2cbd4138c104c(z3::func_entry *_swig_go_0, intgo _swig_go_1) {
  z3::func_entry *arg1 = (z3::func_entry *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::func_entry **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((z3::func_entry const *)arg1)->arg(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::context *_wrap_func_entry_ctx_z3go_6ed2cbd4138c104c(z3::func_entry *_swig_go_0) {
  z3::func_entry *arg1 = (z3::func_entry *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::func_entry **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_func_entry_check_error_z3go_6ed2cbd4138c104c(z3::func_entry *_swig_go_0) {
  z3::func_entry *arg1 = (z3::func_entry *) 0 ;
  
  arg1 = *(z3::func_entry **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::func_interp *_wrap_new_func_interp__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_func_interp *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_func_interp arg2 ;
  Z3_func_interp *argp2 ;
  z3::func_interp *result = 0 ;
  z3::func_interp *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_func_interp *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_func_interp");
  }
  arg2 = (Z3_func_interp)*argp2;
  
  
  result = (z3::func_interp *)new z3::func_interp(*arg1,arg2);
  *(z3::func_interp **)&_swig_go_result = (z3::func_interp *)result; 
  return _swig_go_result;
}


z3::func_interp *_wrap_new_func_interp__SWIG_1_z3go_6ed2cbd4138c104c(z3::func_interp *_swig_go_0) {
  z3::func_interp *arg1 = 0 ;
  z3::func_interp *result = 0 ;
  z3::func_interp *_swig_go_result;
  
  arg1 = *(z3::func_interp **)&_swig_go_0; 
  
  result = (z3::func_interp *)new z3::func_interp((z3::func_interp const &)*arg1);
  *(z3::func_interp **)&_swig_go_result = (z3::func_interp *)result; 
  return _swig_go_result;
}


void _wrap_delete_func_interp_z3go_6ed2cbd4138c104c(z3::func_interp *_swig_go_0) {
  z3::func_interp *arg1 = (z3::func_interp *) 0 ;
  
  arg1 = *(z3::func_interp **)&_swig_go_0; 
  
  delete arg1;
  
}


z3::expr *_wrap_func_interp_else_value_z3go_6ed2cbd4138c104c(z3::func_interp *_swig_go_0) {
  z3::func_interp *arg1 = (z3::func_interp *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::func_interp **)&_swig_go_0; 
  
  result = ((z3::func_interp const *)arg1)->else_value();
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


intgo _wrap_func_interp_num_entries_z3go_6ed2cbd4138c104c(z3::func_interp *_swig_go_0) {
  z3::func_interp *arg1 = (z3::func_interp *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::func_interp **)&_swig_go_0; 
  
  result = (unsigned int)((z3::func_interp const *)arg1)->num_entries();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::func_entry *_wrap_func_interp_entry_z3go_6ed2cbd4138c104c(z3::func_interp *_swig_go_0, intgo _swig_go_1) {
  z3::func_interp *arg1 = (z3::func_interp *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::func_entry > result;
  z3::func_entry *_swig_go_result;
  
  arg1 = *(z3::func_interp **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((z3::func_interp const *)arg1)->entry(arg2);
  *(z3::func_entry **)&_swig_go_result = new z3::func_entry(result); 
  return _swig_go_result;
}


z3::context *_wrap_func_interp_ctx_z3go_6ed2cbd4138c104c(z3::func_interp *_swig_go_0) {
  z3::func_interp *arg1 = (z3::func_interp *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::func_interp **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_func_interp_check_error_z3go_6ed2cbd4138c104c(z3::func_interp *_swig_go_0) {
  z3::func_interp *arg1 = (z3::func_interp *) 0 ;
  
  arg1 = *(z3::func_interp **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::model *_wrap_new_model__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_model *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_model arg2 ;
  Z3_model *argp2 ;
  z3::model *result = 0 ;
  z3::model *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_model *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_model");
  }
  arg2 = (Z3_model)*argp2;
  
  
  result = (z3::model *)new z3::model(*arg1,arg2);
  *(z3::model **)&_swig_go_result = (z3::model *)result; 
  return _swig_go_result;
}


z3::model *_wrap_new_model__SWIG_1_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0) {
  z3::model *arg1 = 0 ;
  z3::model *result = 0 ;
  z3::model *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  result = (z3::model *)new z3::model((z3::model const &)*arg1);
  *(z3::model **)&_swig_go_result = (z3::model *)result; 
  return _swig_go_result;
}


void _wrap_delete_model_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0) {
  z3::model *arg1 = (z3::model *) 0 ;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  delete arg1;
  
}


z3::expr *_wrap_model_eval__SWIG_0_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0, z3::expr *_swig_go_1, bool _swig_go_2) {
  z3::model *arg1 = (z3::model *) 0 ;
  z3::expr *arg2 = 0 ;
  bool arg3 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = ((z3::model const *)arg1)->eval((z3::expr const &)*arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_model_eval__SWIG_1_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0, z3::expr *_swig_go_1) {
  z3::model *arg1 = (z3::model *) 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = ((z3::model const *)arg1)->eval((z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


intgo _wrap_model_num_consts_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0) {
  z3::model *arg1 = (z3::model *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  result = (unsigned int)((z3::model const *)arg1)->num_consts();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_model_num_funcs_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0) {
  z3::model *arg1 = (z3::model *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  result = (unsigned int)((z3::model const *)arg1)->num_funcs();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::func_decl *_wrap_model_get_const_decl_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0, intgo _swig_go_1) {
  z3::model *arg1 = (z3::model *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((z3::model const *)arg1)->get_const_decl(arg2);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  return _swig_go_result;
}


z3::func_decl *_wrap_model_get_func_decl_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0, intgo _swig_go_1) {
  z3::model *arg1 = (z3::model *) 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((z3::model const *)arg1)->get_func_decl(arg2);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  return _swig_go_result;
}


intgo _wrap_model_size_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0) {
  z3::model *arg1 = (z3::model *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  result = (unsigned int)((z3::model const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::func_decl *_wrap_model_Get_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0, intgo _swig_go_1) {
  z3::model *arg1 = (z3::model *) 0 ;
  int arg2 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((z3::model const *)arg1)->operator [](arg2);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  return _swig_go_result;
}


z3::expr *_wrap_model_get_const_interp_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0, z3::func_decl *_swig_go_1) {
  z3::model *arg1 = (z3::model *) 0 ;
  SwigValueWrapper< z3::func_decl > arg2 ;
  z3::func_decl *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  argp2 = (z3::func_decl *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::func_decl");
  }
  arg2 = (z3::func_decl)*argp2;
  
  
  result = ((z3::model const *)arg1)->get_const_interp(arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::func_interp *_wrap_model_get_func_interp_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0, z3::func_decl *_swig_go_1) {
  z3::model *arg1 = (z3::model *) 0 ;
  SwigValueWrapper< z3::func_decl > arg2 ;
  z3::func_decl *argp2 ;
  SwigValueWrapper< z3::func_interp > result;
  z3::func_interp *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  argp2 = (z3::func_decl *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::func_decl");
  }
  arg2 = (z3::func_decl)*argp2;
  
  
  result = ((z3::model const *)arg1)->get_func_interp(arg2);
  *(z3::func_interp **)&_swig_go_result = new z3::func_interp(result); 
  return _swig_go_result;
}


bool _wrap_model_has_interp_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0, z3::func_decl *_swig_go_1) {
  z3::model *arg1 = (z3::model *) 0 ;
  SwigValueWrapper< z3::func_decl > arg2 ;
  z3::func_decl *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  argp2 = (z3::func_decl *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::func_decl");
  }
  arg2 = (z3::func_decl)*argp2;
  
  
  result = (bool)((z3::model const *)arg1)->has_interp(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_model_String_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0) {
  z3::model *arg1 = (z3::model *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  result = ((z3::model const *)arg1)->String();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::context *_wrap_model_ctx_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0) {
  z3::model *arg1 = (z3::model *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_model_check_error_z3go_6ed2cbd4138c104c(z3::model *_swig_go_0) {
  z3::model *arg1 = (z3::model *) 0 ;
  
  arg1 = *(z3::model **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::stats *_wrap_new_stats__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::stats *result = 0 ;
  z3::stats *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::stats *)new z3::stats(*arg1);
  *(z3::stats **)&_swig_go_result = (z3::stats *)result; 
  return _swig_go_result;
}


z3::stats *_wrap_new_stats__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_stats *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_stats arg2 ;
  Z3_stats *argp2 ;
  z3::stats *result = 0 ;
  z3::stats *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_stats *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_stats");
  }
  arg2 = (Z3_stats)*argp2;
  
  
  result = (z3::stats *)new z3::stats(*arg1,arg2);
  *(z3::stats **)&_swig_go_result = (z3::stats *)result; 
  return _swig_go_result;
}


z3::stats *_wrap_new_stats__SWIG_2_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0) {
  z3::stats *arg1 = 0 ;
  z3::stats *result = 0 ;
  z3::stats *_swig_go_result;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  
  result = (z3::stats *)new z3::stats((z3::stats const &)*arg1);
  *(z3::stats **)&_swig_go_result = (z3::stats *)result; 
  return _swig_go_result;
}


void _wrap_delete_stats_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_stats_size_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  
  result = (unsigned int)((z3::stats const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_stats_key_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0, intgo _swig_go_1) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  unsigned int arg2 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = ((z3::stats const *)arg1)->key(arg2);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


bool _wrap_stats_is_uint_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0, intgo _swig_go_1) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  unsigned int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (bool)((z3::stats const *)arg1)->is_uint(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_stats_is_double_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0, intgo _swig_go_1) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  unsigned int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (bool)((z3::stats const *)arg1)->is_double(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_stats_uint_value_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0, intgo _swig_go_1) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  unsigned int arg2 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (unsigned int)((z3::stats const *)arg1)->uint_value(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_stats_double_value_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0, intgo _swig_go_1) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  unsigned int arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = (double)((z3::stats const *)arg1)->double_value(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::context *_wrap_stats_ctx_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_stats_check_error_z3go_6ed2cbd4138c104c(z3::stats *_swig_go_0) {
  z3::stats *arg1 = (z3::stats *) 0 ;
  
  arg1 = *(z3::stats **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::solver *_wrap_new_solver__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::solver *result = 0 ;
  z3::solver *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::solver *)new z3::solver(*arg1);
  *(z3::solver **)&_swig_go_result = (z3::solver *)result; 
  return _swig_go_result;
}


z3::solver *_wrap_new_solver__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::solver::simple *_swig_go_1) {
  z3::context *arg1 = 0 ;
  z3::solver::simple arg2 ;
  z3::solver::simple *argp2 ;
  z3::solver *result = 0 ;
  z3::solver *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (z3::solver::simple *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::solver::simple");
  }
  arg2 = (z3::solver::simple)*argp2;
  
  
  result = (z3::solver *)new z3::solver(*arg1,arg2);
  *(z3::solver **)&_swig_go_result = (z3::solver *)result; 
  return _swig_go_result;
}


z3::solver *_wrap_new_solver__SWIG_2_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_solver *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_solver arg2 ;
  Z3_solver *argp2 ;
  z3::solver *result = 0 ;
  z3::solver *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_solver *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_solver");
  }
  arg2 = (Z3_solver)*argp2;
  
  
  result = (z3::solver *)new z3::solver(*arg1,arg2);
  *(z3::solver **)&_swig_go_result = (z3::solver *)result; 
  return _swig_go_result;
}


z3::solver *_wrap_new_solver__SWIG_3_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  z3::solver *result = 0 ;
  z3::solver *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (z3::solver *)new z3::solver(*arg1,(char const *)arg2);
  *(z3::solver **)&_swig_go_result = (z3::solver *)result; 
  free(arg2); 
  return _swig_go_result;
}


z3::solver *_wrap_new_solver__SWIG_4_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, z3::solver *_swig_go_1, z3::solver::translate *_swig_go_2) {
  z3::context *arg1 = 0 ;
  z3::solver *arg2 = 0 ;
  z3::solver::translate arg3 ;
  z3::solver::translate *argp3 ;
  z3::solver *result = 0 ;
  z3::solver *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = *(z3::solver **)&_swig_go_1; 
  
  argp3 = (z3::solver::translate *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::solver::translate");
  }
  arg3 = (z3::solver::translate)*argp3;
  
  
  result = (z3::solver *)new z3::solver(*arg1,(z3::solver const &)*arg2,arg3);
  *(z3::solver **)&_swig_go_result = (z3::solver *)result; 
  return _swig_go_result;
}


z3::solver *_wrap_new_solver__SWIG_5_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = 0 ;
  z3::solver *result = 0 ;
  z3::solver *_swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = (z3::solver *)new z3::solver((z3::solver const &)*arg1);
  *(z3::solver **)&_swig_go_result = (z3::solver *)result; 
  return _swig_go_result;
}


void _wrap_delete_solver_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_solver_set_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, z3::params *_swig_go_1) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  z3::params *arg2 = 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  arg2 = *(z3::params **)&_swig_go_1; 
  
  (arg1)->set((z3::params const &)*arg2);
  
}


void _wrap_solver_push_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  (arg1)->push();
  
}


void _wrap_solver_pop__SWIG_0_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, intgo _swig_go_1) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  (arg1)->pop(arg2);
  
}


void _wrap_solver_pop__SWIG_1_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  (arg1)->pop();
  
}


void _wrap_solver_reset_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_solver_add__SWIG_0_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, z3::expr *_swig_go_1) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  z3::expr *arg2 = 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  (arg1)->add((z3::expr const &)*arg2);
  
}


void _wrap_solver_add__SWIG_1_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  (arg1)->add((z3::expr const &)*arg2,(z3::expr const &)*arg3);
  
}


void _wrap_solver_add__SWIG_2_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, z3::expr *_swig_go_1, _gostring_ _swig_go_2) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  z3::expr *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->add((z3::expr const &)*arg2,(char const *)arg3);
  
  free(arg3); 
}


intgo _wrap_solver_check__SWIG_0_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  z3::check_result result;
  intgo _swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = (z3::check_result)(arg1)->check();
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_solver_check__SWIG_1_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, intgo _swig_go_1, z3::expr *_swig_go_2) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  unsigned int arg2 ;
  z3::expr *arg3 = (z3::expr *) (z3::expr *)0 ;
  z3::check_result result;
  intgo _swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = (z3::check_result)(arg1)->check(arg2,arg3);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_solver_check__SWIG_2_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, z3::ast_vector_tpl< z3::expr > *_swig_go_1) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  SwigValueWrapper< z3::ast_vector_tpl< z3::expr > > arg2 ;
  z3::expr_vector *argp2 ;
  z3::check_result result;
  intgo _swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  argp2 = (z3::expr_vector *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::expr_vector");
  }
  arg2 = (z3::expr_vector)*argp2;
  
  
  result = (z3::check_result)(arg1)->check(arg2);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


z3::model *_wrap_solver_get_model_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  SwigValueWrapper< z3::model > result;
  z3::model *_swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = ((z3::solver const *)arg1)->get_model();
  *(z3::model **)&_swig_go_result = new z3::model(result); 
  return _swig_go_result;
}


intgo _wrap_solver_consequences_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, z3::ast_vector_tpl< z3::expr > *_swig_go_1, z3::ast_vector_tpl< z3::expr > *_swig_go_2, z3::ast_vector_tpl< z3::expr > *_swig_go_3) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  z3::expr_vector *arg2 = 0 ;
  z3::expr_vector *arg3 = 0 ;
  z3::expr_vector *arg4 = 0 ;
  z3::check_result result;
  intgo _swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  arg2 = *(z3::expr_vector **)&_swig_go_1; 
  arg3 = *(z3::expr_vector **)&_swig_go_2; 
  arg4 = *(z3::expr_vector **)&_swig_go_3; 
  
  result = (z3::check_result)(arg1)->consequences(*arg2,*arg3,*arg4);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


_gostring_ _wrap_solver_reason_unknown_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = ((z3::solver const *)arg1)->reason_unknown();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::stats *_wrap_solver_statistics_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  SwigValueWrapper< z3::stats > result;
  z3::stats *_swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = ((z3::solver const *)arg1)->statistics();
  *(z3::stats **)&_swig_go_result = new z3::stats(result); 
  return _swig_go_result;
}


z3::ast_vector_tpl< z3::expr > *_wrap_solver_unsat_core_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  SwigValueWrapper< z3::ast_vector_tpl< z3::expr > > result;
  z3::ast_vector_tpl< z3::expr > *_swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = ((z3::solver const *)arg1)->unsat_core();
  *(z3::expr_vector **)&_swig_go_result = new z3::expr_vector(result); 
  return _swig_go_result;
}


z3::ast_vector_tpl< z3::expr > *_wrap_solver_assertions_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  SwigValueWrapper< z3::ast_vector_tpl< z3::expr > > result;
  z3::ast_vector_tpl< z3::expr > *_swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = ((z3::solver const *)arg1)->assertions();
  *(z3::expr_vector **)&_swig_go_result = new z3::expr_vector(result); 
  return _swig_go_result;
}


z3::expr *_wrap_solver_proof_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = ((z3::solver const *)arg1)->proof();
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


_gostring_ _wrap_solver_to_smt2__SWIG_0_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0, _gostring_ _swig_go_1) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  char *arg2 = (char *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (arg1)->to_smt2((char const *)arg2);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  free(arg2); 
  return _swig_go_result;
}


_gostring_ _wrap_solver_to_smt2__SWIG_1_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = (arg1)->to_smt2();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::param_descrs *_wrap_solver_get_param_descrs_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  SwigValueWrapper< z3::param_descrs > result;
  z3::param_descrs *_swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = (arg1)->get_param_descrs();
  *(z3::param_descrs **)&_swig_go_result = new z3::param_descrs(result); 
  return _swig_go_result;
}


_gostring_ _wrap_solver_String_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  result = ((z3::solver const *)arg1)->String();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::context *_wrap_solver_ctx_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_solver_check_error_z3go_6ed2cbd4138c104c(z3::solver *_swig_go_0) {
  z3::solver *arg1 = (z3::solver *) 0 ;
  
  arg1 = *(z3::solver **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::goal *_wrap_new_goal__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, bool _swig_go_1, bool _swig_go_2, bool _swig_go_3) {
  z3::context *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  z3::goal *result = 0 ;
  z3::goal *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (z3::goal *)new z3::goal(*arg1,arg2,arg3,arg4);
  *(z3::goal **)&_swig_go_result = (z3::goal *)result; 
  return _swig_go_result;
}


z3::goal *_wrap_new_goal__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, bool _swig_go_1, bool _swig_go_2) {
  z3::context *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  z3::goal *result = 0 ;
  z3::goal *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (z3::goal *)new z3::goal(*arg1,arg2,arg3);
  *(z3::goal **)&_swig_go_result = (z3::goal *)result; 
  return _swig_go_result;
}


z3::goal *_wrap_new_goal__SWIG_2_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, bool _swig_go_1) {
  z3::context *arg1 = 0 ;
  bool arg2 ;
  z3::goal *result = 0 ;
  z3::goal *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (z3::goal *)new z3::goal(*arg1,arg2);
  *(z3::goal **)&_swig_go_result = (z3::goal *)result; 
  return _swig_go_result;
}


z3::goal *_wrap_new_goal__SWIG_3_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0) {
  z3::context *arg1 = 0 ;
  z3::goal *result = 0 ;
  z3::goal *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  result = (z3::goal *)new z3::goal(*arg1);
  *(z3::goal **)&_swig_go_result = (z3::goal *)result; 
  return _swig_go_result;
}


z3::goal *_wrap_new_goal__SWIG_4_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_goal *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_goal arg2 ;
  Z3_goal *argp2 ;
  z3::goal *result = 0 ;
  z3::goal *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_goal *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_goal");
  }
  arg2 = (Z3_goal)*argp2;
  
  
  result = (z3::goal *)new z3::goal(*arg1,arg2);
  *(z3::goal **)&_swig_go_result = (z3::goal *)result; 
  return _swig_go_result;
}


z3::goal *_wrap_new_goal__SWIG_5_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = 0 ;
  z3::goal *result = 0 ;
  z3::goal *_swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = (z3::goal *)new z3::goal((z3::goal const &)*arg1);
  *(z3::goal **)&_swig_go_result = (z3::goal *)result; 
  return _swig_go_result;
}


void _wrap_delete_goal_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_goal_add_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0, z3::expr *_swig_go_1) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  z3::expr *arg2 = 0 ;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  (arg1)->add((z3::expr const &)*arg2);
  
}


intgo _wrap_goal_size_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = (unsigned int)((z3::goal const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::expr *_wrap_goal_Get_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0, intgo _swig_go_1) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((z3::goal const *)arg1)->operator [](arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


Z3_goal_prec *_wrap_goal_precision_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  Z3_goal_prec result;
  Z3_goal_prec *_swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = ((z3::goal const *)arg1)->precision();
  *(Z3_goal_prec **)&_swig_go_result = new Z3_goal_prec(result); 
  return _swig_go_result;
}


bool _wrap_goal_inconsistent_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = (bool)((z3::goal const *)arg1)->inconsistent();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_goal_depth_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = (unsigned int)((z3::goal const *)arg1)->depth();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_goal_reset_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


intgo _wrap_goal_num_exprs_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = (unsigned int)((z3::goal const *)arg1)->num_exprs();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_goal_is_decided_sat_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = (bool)((z3::goal const *)arg1)->is_decided_sat();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_goal_is_decided_unsat_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = (bool)((z3::goal const *)arg1)->is_decided_unsat();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::expr *_wrap_goal_as_expr_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  result = ((z3::goal const *)arg1)->as_expr();
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::context *_wrap_goal_ctx_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_goal_check_error_z3go_6ed2cbd4138c104c(z3::goal *_swig_go_0) {
  z3::goal *arg1 = (z3::goal *) 0 ;
  
  arg1 = *(z3::goal **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::apply_result *_wrap_new_apply_result__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_apply_result *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_apply_result arg2 ;
  Z3_apply_result *argp2 ;
  z3::apply_result *result = 0 ;
  z3::apply_result *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_apply_result *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_apply_result");
  }
  arg2 = (Z3_apply_result)*argp2;
  
  
  result = (z3::apply_result *)new z3::apply_result(*arg1,arg2);
  *(z3::apply_result **)&_swig_go_result = (z3::apply_result *)result; 
  return _swig_go_result;
}


z3::apply_result *_wrap_new_apply_result__SWIG_1_z3go_6ed2cbd4138c104c(z3::apply_result *_swig_go_0) {
  z3::apply_result *arg1 = 0 ;
  z3::apply_result *result = 0 ;
  z3::apply_result *_swig_go_result;
  
  arg1 = *(z3::apply_result **)&_swig_go_0; 
  
  result = (z3::apply_result *)new z3::apply_result((z3::apply_result const &)*arg1);
  *(z3::apply_result **)&_swig_go_result = (z3::apply_result *)result; 
  return _swig_go_result;
}


void _wrap_delete_apply_result_z3go_6ed2cbd4138c104c(z3::apply_result *_swig_go_0) {
  z3::apply_result *arg1 = (z3::apply_result *) 0 ;
  
  arg1 = *(z3::apply_result **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_apply_result_size_z3go_6ed2cbd4138c104c(z3::apply_result *_swig_go_0) {
  z3::apply_result *arg1 = (z3::apply_result *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(z3::apply_result **)&_swig_go_0; 
  
  result = (unsigned int)((z3::apply_result const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::goal *_wrap_apply_result_Get_z3go_6ed2cbd4138c104c(z3::apply_result *_swig_go_0, intgo _swig_go_1) {
  z3::apply_result *arg1 = (z3::apply_result *) 0 ;
  int arg2 ;
  SwigValueWrapper< z3::goal > result;
  z3::goal *_swig_go_result;
  
  arg1 = *(z3::apply_result **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((z3::apply_result const *)arg1)->operator [](arg2);
  *(z3::goal **)&_swig_go_result = new z3::goal(result); 
  return _swig_go_result;
}


z3::model *_wrap_apply_result_convert_model__SWIG_0_z3go_6ed2cbd4138c104c(z3::apply_result *_swig_go_0, z3::model *_swig_go_1, intgo _swig_go_2) {
  z3::apply_result *arg1 = (z3::apply_result *) 0 ;
  z3::model *arg2 = 0 ;
  unsigned int arg3 ;
  SwigValueWrapper< z3::model > result;
  z3::model *_swig_go_result;
  
  arg1 = *(z3::apply_result **)&_swig_go_0; 
  arg2 = *(z3::model **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = ((z3::apply_result const *)arg1)->convert_model((z3::model const &)*arg2,arg3);
  *(z3::model **)&_swig_go_result = new z3::model(result); 
  return _swig_go_result;
}


z3::model *_wrap_apply_result_convert_model__SWIG_1_z3go_6ed2cbd4138c104c(z3::apply_result *_swig_go_0, z3::model *_swig_go_1) {
  z3::apply_result *arg1 = (z3::apply_result *) 0 ;
  z3::model *arg2 = 0 ;
  SwigValueWrapper< z3::model > result;
  z3::model *_swig_go_result;
  
  arg1 = *(z3::apply_result **)&_swig_go_0; 
  arg2 = *(z3::model **)&_swig_go_1; 
  
  result = ((z3::apply_result const *)arg1)->convert_model((z3::model const &)*arg2);
  *(z3::model **)&_swig_go_result = new z3::model(result); 
  return _swig_go_result;
}


z3::context *_wrap_apply_result_ctx_z3go_6ed2cbd4138c104c(z3::apply_result *_swig_go_0) {
  z3::apply_result *arg1 = (z3::apply_result *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::apply_result **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_apply_result_check_error_z3go_6ed2cbd4138c104c(z3::apply_result *_swig_go_0) {
  z3::apply_result *arg1 = (z3::apply_result *) 0 ;
  
  arg1 = *(z3::apply_result **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::tactic *_wrap_new_tactic__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  z3::tactic *result = 0 ;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (z3::tactic *)new z3::tactic(*arg1,(char const *)arg2);
  *(z3::tactic **)&_swig_go_result = (z3::tactic *)result; 
  free(arg2); 
  return _swig_go_result;
}


z3::tactic *_wrap_new_tactic__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_tactic *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_tactic arg2 ;
  Z3_tactic *argp2 ;
  z3::tactic *result = 0 ;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_tactic *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_tactic");
  }
  arg2 = (Z3_tactic)*argp2;
  
  
  result = (z3::tactic *)new z3::tactic(*arg1,arg2);
  *(z3::tactic **)&_swig_go_result = (z3::tactic *)result; 
  return _swig_go_result;
}


z3::tactic *_wrap_new_tactic__SWIG_2_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0) {
  z3::tactic *arg1 = 0 ;
  z3::tactic *result = 0 ;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  
  result = (z3::tactic *)new z3::tactic((z3::tactic const &)*arg1);
  *(z3::tactic **)&_swig_go_result = (z3::tactic *)result; 
  return _swig_go_result;
}


void _wrap_delete_tactic_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0) {
  z3::tactic *arg1 = (z3::tactic *) 0 ;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  
  delete arg1;
  
}


z3::solver *_wrap_tactic_mk_solver_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0) {
  z3::tactic *arg1 = (z3::tactic *) 0 ;
  SwigValueWrapper< z3::solver > result;
  z3::solver *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  
  result = ((z3::tactic const *)arg1)->mk_solver();
  *(z3::solver **)&_swig_go_result = new z3::solver(result); 
  return _swig_go_result;
}


z3::apply_result *_wrap_tactic_apply_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0, z3::goal *_swig_go_1) {
  z3::tactic *arg1 = (z3::tactic *) 0 ;
  z3::goal *arg2 = 0 ;
  SwigValueWrapper< z3::apply_result > result;
  z3::apply_result *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  arg2 = *(z3::goal **)&_swig_go_1; 
  
  result = ((z3::tactic const *)arg1)->apply((z3::goal const &)*arg2);
  *(z3::apply_result **)&_swig_go_result = new z3::apply_result(result); 
  return _swig_go_result;
}


_gostring_ _wrap_tactic_help_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0) {
  z3::tactic *arg1 = (z3::tactic *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  
  result = ((z3::tactic const *)arg1)->help();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


z3::param_descrs *_wrap_tactic_get_param_descrs_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0) {
  z3::tactic *arg1 = (z3::tactic *) 0 ;
  SwigValueWrapper< z3::param_descrs > result;
  z3::param_descrs *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  
  result = (arg1)->get_param_descrs();
  *(z3::param_descrs **)&_swig_go_result = new z3::param_descrs(result); 
  return _swig_go_result;
}


z3::context *_wrap_tactic_ctx_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0) {
  z3::tactic *arg1 = (z3::tactic *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_tactic_check_error_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0) {
  z3::tactic *arg1 = (z3::tactic *) 0 ;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::tactic *_wrap_repeat__SWIG_0_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0, intgo _swig_go_1) {
  z3::tactic *arg1 = 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::tactic > result;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = z3::repeat((z3::tactic const &)*arg1,arg2);
  *(z3::tactic **)&_swig_go_result = new z3::tactic(result); 
  return _swig_go_result;
}


z3::tactic *_wrap_repeat__SWIG_1_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0) {
  z3::tactic *arg1 = 0 ;
  SwigValueWrapper< z3::tactic > result;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  
  result = z3::repeat((z3::tactic const &)*arg1);
  *(z3::tactic **)&_swig_go_result = new z3::tactic(result); 
  return _swig_go_result;
}


z3::tactic *_wrap_with_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0, z3::params *_swig_go_1) {
  z3::tactic *arg1 = 0 ;
  z3::params *arg2 = 0 ;
  SwigValueWrapper< z3::tactic > result;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  arg2 = *(z3::params **)&_swig_go_1; 
  
  result = z3::with((z3::tactic const &)*arg1,(z3::params const &)*arg2);
  *(z3::tactic **)&_swig_go_result = new z3::tactic(result); 
  return _swig_go_result;
}


z3::tactic *_wrap_try_for_z3go_6ed2cbd4138c104c(z3::tactic *_swig_go_0, intgo _swig_go_1) {
  z3::tactic *arg1 = 0 ;
  unsigned int arg2 ;
  SwigValueWrapper< z3::tactic > result;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::tactic **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  result = z3::try_for((z3::tactic const &)*arg1,arg2);
  *(z3::tactic **)&_swig_go_result = new z3::tactic(result); 
  return _swig_go_result;
}


z3::probe *_wrap_new_probe__SWIG_0_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, _gostring_ _swig_go_1) {
  z3::context *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  z3::probe *result = 0 ;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (z3::probe *)new z3::probe(*arg1,(char const *)arg2);
  *(z3::probe **)&_swig_go_result = (z3::probe *)result; 
  free(arg2); 
  return _swig_go_result;
}


z3::probe *_wrap_new_probe__SWIG_1_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, double _swig_go_1) {
  z3::context *arg1 = 0 ;
  double arg2 ;
  z3::probe *result = 0 ;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = (z3::probe *)new z3::probe(*arg1,arg2);
  *(z3::probe **)&_swig_go_result = (z3::probe *)result; 
  return _swig_go_result;
}


z3::probe *_wrap_new_probe__SWIG_2_z3go_6ed2cbd4138c104c(z3::context *_swig_go_0, Z3_probe *_swig_go_1) {
  z3::context *arg1 = 0 ;
  Z3_probe arg2 ;
  Z3_probe *argp2 ;
  z3::probe *result = 0 ;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::context **)&_swig_go_0; 
  
  argp2 = (Z3_probe *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null Z3_probe");
  }
  arg2 = (Z3_probe)*argp2;
  
  
  result = (z3::probe *)new z3::probe(*arg1,arg2);
  *(z3::probe **)&_swig_go_result = (z3::probe *)result; 
  return _swig_go_result;
}


z3::probe *_wrap_new_probe__SWIG_3_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0) {
  z3::probe *arg1 = 0 ;
  z3::probe *result = 0 ;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  
  result = (z3::probe *)new z3::probe((z3::probe const &)*arg1);
  *(z3::probe **)&_swig_go_result = (z3::probe *)result; 
  return _swig_go_result;
}


void _wrap_delete_probe_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0) {
  z3::probe *arg1 = (z3::probe *) 0 ;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  
  delete arg1;
  
}


double _wrap_probe_apply_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::goal *_swig_go_1) {
  z3::probe *arg1 = (z3::probe *) 0 ;
  z3::goal *arg2 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::goal **)&_swig_go_1; 
  
  result = (double)((z3::probe const *)arg1)->apply((z3::goal const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


z3::probe *_wrap_LessEq__SWIG_3_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::probe *_swig_go_1) {
  z3::probe *arg1 = 0 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator <=((z3::probe const &)*arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_LessEq__SWIG_4_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, double _swig_go_1) {
  z3::probe *arg1 = 0 ;
  double arg2 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = operator <=((z3::probe const &)*arg1,arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_LessEq__SWIG_5_z3go_6ed2cbd4138c104c(double _swig_go_0, z3::probe *_swig_go_1) {
  double arg1 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator <=(arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_GreaterEq__SWIG_3_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::probe *_swig_go_1) {
  z3::probe *arg1 = 0 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator >=((z3::probe const &)*arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_GreaterEq__SWIG_4_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, double _swig_go_1) {
  z3::probe *arg1 = 0 ;
  double arg2 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = operator >=((z3::probe const &)*arg1,arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_GreaterEq__SWIG_5_z3go_6ed2cbd4138c104c(double _swig_go_0, z3::probe *_swig_go_1) {
  double arg1 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator >=(arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Less__SWIG_3_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::probe *_swig_go_1) {
  z3::probe *arg1 = 0 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator <((z3::probe const &)*arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Less__SWIG_4_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, double _swig_go_1) {
  z3::probe *arg1 = 0 ;
  double arg2 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = operator <((z3::probe const &)*arg1,arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Less__SWIG_5_z3go_6ed2cbd4138c104c(double _swig_go_0, z3::probe *_swig_go_1) {
  double arg1 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator <(arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Greater__SWIG_3_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::probe *_swig_go_1) {
  z3::probe *arg1 = 0 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator >((z3::probe const &)*arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Greater__SWIG_4_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, double _swig_go_1) {
  z3::probe *arg1 = 0 ;
  double arg2 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = operator >((z3::probe const &)*arg1,arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Greater__SWIG_5_z3go_6ed2cbd4138c104c(double _swig_go_0, z3::probe *_swig_go_1) {
  double arg1 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator >(arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Equals__SWIG_3_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::probe *_swig_go_1) {
  z3::probe *arg1 = 0 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator ==((z3::probe const &)*arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Equals__SWIG_4_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, double _swig_go_1) {
  z3::probe *arg1 = 0 ;
  double arg2 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = operator ==((z3::probe const &)*arg1,arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Equals__SWIG_5_z3go_6ed2cbd4138c104c(double _swig_go_0, z3::probe *_swig_go_1) {
  double arg1 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator ==(arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_And__SWIG_3_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::probe *_swig_go_1) {
  z3::probe *arg1 = 0 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator &&((z3::probe const &)*arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Or__SWIG_3_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::probe *_swig_go_1) {
  z3::probe *arg1 = 0 ;
  z3::probe *arg2 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::probe **)&_swig_go_1; 
  
  result = operator ||((z3::probe const &)*arg1,(z3::probe const &)*arg2);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::probe *_wrap_Not__SWIG_1_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0) {
  z3::probe *arg1 = 0 ;
  SwigValueWrapper< z3::probe > result;
  z3::probe *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  
  result = operator !((z3::probe const &)*arg1);
  *(z3::probe **)&_swig_go_result = new z3::probe(result); 
  return _swig_go_result;
}


z3::context *_wrap_probe_ctx_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0) {
  z3::probe *arg1 = (z3::probe *) 0 ;
  z3::context *result = 0 ;
  z3::context *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  result = (z3::context *) &((z3::object const *)swig_b0)->ctx();
  *(z3::context **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_probe_check_error_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0) {
  z3::probe *arg1 = (z3::probe *) 0 ;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  
  z3::object *swig_b0 = (z3::object *)arg1;
  ((z3::object const *)swig_b0)->check_error();
  
}


z3::tactic *_wrap_fail_if_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0) {
  z3::probe *arg1 = 0 ;
  SwigValueWrapper< z3::tactic > result;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  
  result = z3::fail_if((z3::probe const &)*arg1);
  *(z3::tactic **)&_swig_go_result = new z3::tactic(result); 
  return _swig_go_result;
}


z3::tactic *_wrap_when_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::tactic *_swig_go_1) {
  z3::probe *arg1 = 0 ;
  z3::tactic *arg2 = 0 ;
  SwigValueWrapper< z3::tactic > result;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::tactic **)&_swig_go_1; 
  
  result = z3::when((z3::probe const &)*arg1,(z3::tactic const &)*arg2);
  *(z3::tactic **)&_swig_go_result = new z3::tactic(result); 
  return _swig_go_result;
}


z3::tactic *_wrap_cond_z3go_6ed2cbd4138c104c(z3::probe *_swig_go_0, z3::tactic *_swig_go_1, z3::tactic *_swig_go_2) {
  z3::probe *arg1 = 0 ;
  z3::tactic *arg2 = 0 ;
  z3::tactic *arg3 = 0 ;
  SwigValueWrapper< z3::tactic > result;
  z3::tactic *_swig_go_result;
  
  arg1 = *(z3::probe **)&_swig_go_0; 
  arg2 = *(z3::tactic **)&_swig_go_1; 
  arg3 = *(z3::tactic **)&_swig_go_2; 
  
  result = z3::cond((z3::probe const &)*arg1,(z3::tactic const &)*arg2,(z3::tactic const &)*arg3);
  *(z3::tactic **)&_swig_go_result = new z3::tactic(result); 
  return _swig_go_result;
}


z3::expr *_wrap_to_real_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = z3::to_real((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::func_decl *_wrap_function__SWIG_0_z3go_6ed2cbd4138c104c(z3::symbol *_swig_go_0, intgo _swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3) {
  z3::symbol *arg1 = 0 ;
  unsigned int arg2 ;
  z3::sort *arg3 = (z3::sort *) 0 ;
  z3::sort *arg4 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  arg1 = *(z3::symbol **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  
  result = z3::function((z3::symbol const &)*arg1,arg2,(z3::sort const *)arg3,(z3::sort const &)*arg4);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  return _swig_go_result;
}


z3::func_decl *_wrap_function__SWIG_1_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, intgo _swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  unsigned int arg2 ;
  z3::sort *arg3 = (z3::sort *) 0 ;
  z3::sort *arg4 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  
  result = z3::function((char const *)arg1,arg2,(z3::sort const *)arg3,(z3::sort const &)*arg4);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg1); 
  return _swig_go_result;
}


z3::func_decl *_wrap_function__SWIG_2_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, z3::sort *_swig_go_1, z3::sort *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  z3::sort *arg2 = 0 ;
  z3::sort *arg3 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(z3::sort **)&_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  
  result = z3::function((char const *)arg1,(z3::sort const &)*arg2,(z3::sort const &)*arg3);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg1); 
  return _swig_go_result;
}


z3::func_decl *_wrap_function__SWIG_3_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, z3::sort *_swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  z3::sort *arg2 = 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(z3::sort **)&_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  
  result = z3::function((char const *)arg1,(z3::sort const &)*arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg1); 
  return _swig_go_result;
}


z3::func_decl *_wrap_function__SWIG_4_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, z3::sort *_swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  z3::sort *arg2 = 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  z3::sort *arg5 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(z3::sort **)&_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  
  result = z3::function((char const *)arg1,(z3::sort const &)*arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4,(z3::sort const &)*arg5);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg1); 
  return _swig_go_result;
}


z3::func_decl *_wrap_function__SWIG_5_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, z3::sort *_swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4, z3::sort *_swig_go_5) {
  char *arg1 = (char *) 0 ;
  z3::sort *arg2 = 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  z3::sort *arg5 = 0 ;
  z3::sort *arg6 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(z3::sort **)&_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  arg6 = *(z3::sort **)&_swig_go_5; 
  
  result = z3::function((char const *)arg1,(z3::sort const &)*arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4,(z3::sort const &)*arg5,(z3::sort const &)*arg6);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg1); 
  return _swig_go_result;
}


z3::func_decl *_wrap_function__SWIG_6_z3go_6ed2cbd4138c104c(_gostring_ _swig_go_0, z3::sort *_swig_go_1, z3::sort *_swig_go_2, z3::sort *_swig_go_3, z3::sort *_swig_go_4, z3::sort *_swig_go_5, z3::sort *_swig_go_6) {
  char *arg1 = (char *) 0 ;
  z3::sort *arg2 = 0 ;
  z3::sort *arg3 = 0 ;
  z3::sort *arg4 = 0 ;
  z3::sort *arg5 = 0 ;
  z3::sort *arg6 = 0 ;
  z3::sort *arg7 = 0 ;
  SwigValueWrapper< z3::func_decl > result;
  z3::func_decl *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(z3::sort **)&_swig_go_1; 
  arg3 = *(z3::sort **)&_swig_go_2; 
  arg4 = *(z3::sort **)&_swig_go_3; 
  arg5 = *(z3::sort **)&_swig_go_4; 
  arg6 = *(z3::sort **)&_swig_go_5; 
  arg7 = *(z3::sort **)&_swig_go_6; 
  
  result = z3::function((char const *)arg1,(z3::sort const &)*arg2,(z3::sort const &)*arg3,(z3::sort const &)*arg4,(z3::sort const &)*arg5,(z3::sort const &)*arg6,(z3::sort const &)*arg7);
  *(z3::func_decl **)&_swig_go_result = new z3::func_decl(result); 
  free(arg1); 
  return _swig_go_result;
}


z3::expr *_wrap_Xselect__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::select((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_Xselect__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = z3::select((z3::expr const &)*arg1,arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_store__SWIG_0_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = z3::store((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_store__SWIG_1_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1, z3::expr *_swig_go_2) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  z3::expr *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = z3::store((z3::expr const &)*arg1,arg2,(z3::expr const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_store__SWIG_2_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, intgo _swig_go_2) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > arg2 ;
  int arg3 ;
  z3::expr *argp2 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  argp2 = (z3::expr *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null z3::expr");
  }
  arg2 = (z3::expr)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  result = z3::store((z3::expr const &)*arg1,arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_store__SWIG_3_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  z3::expr *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = z3::store((z3::expr const &)*arg1,arg2,arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_const_array_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0, z3::expr *_swig_go_1) {
  z3::sort *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::const_array((z3::sort const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_empty_set_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = z3::empty_set((z3::sort const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_full_set_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = z3::full_set((z3::sort const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_set_add_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::set_add((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_set_del_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::set_del((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_set_union_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::set_union((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_set_intersect_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::set_intersect((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_set_difference_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::set_difference((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_set_complement_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = z3::set_complement((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_set_member_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::set_member((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_set_subset_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::set_subset((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_empty_z3go_6ed2cbd4138c104c(z3::sort *_swig_go_0) {
  z3::sort *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::sort **)&_swig_go_0; 
  
  result = z3::empty((z3::sort const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_suffixof_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::suffixof((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_prefixof_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::prefixof((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_indexof_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1, z3::expr *_swig_go_2) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  z3::expr *arg3 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  arg3 = *(z3::expr **)&_swig_go_2; 
  
  result = z3::indexof((z3::expr const &)*arg1,(z3::expr const &)*arg2,(z3::expr const &)*arg3);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_to_re_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = z3::to_re((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_in_re_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0, z3::expr *_swig_go_1) {
  z3::expr *arg1 = 0 ;
  z3::expr *arg2 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  arg2 = *(z3::expr **)&_swig_go_1; 
  
  result = z3::in_re((z3::expr const &)*arg1,(z3::expr const &)*arg2);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_plus_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = z3::plus((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_option_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = z3::option((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_star_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = z3::star((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


z3::expr *_wrap_interpolant_z3go_6ed2cbd4138c104c(z3::expr *_swig_go_0) {
  z3::expr *arg1 = 0 ;
  SwigValueWrapper< z3::expr > result;
  z3::expr *_swig_go_result;
  
  arg1 = *(z3::expr **)&_swig_go_0; 
  
  result = z3::interpolant((z3::expr const &)*arg1);
  *(z3::expr **)&_swig_go_result = new z3::expr(result); 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

